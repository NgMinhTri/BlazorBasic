@page "/createTask"
@using BlazorAssemblyBasic.Services
@using Blazorbasic.Models;
@using Blazorbasic.Models.Enums
@inject ITaskApiClient TaskApiClient;
@inject NavigationManager NavigationManager;
@inject IToastService toastService;

<EditForm Model ="Task" OnValidSubmit="SubmitTask">
   <DataAnnotationsValidator />
  <div class="form-group">
    <label>Name</label>
    <InputText class="form-control" @bind-Value="Task.Name" placeholder="Enter Name"></InputText>
    <ValidationMessage For="()=> Task.Name"></ValidationMessage>
    <small id="nameHelp" class="form-text text-muted">Enter task name</small>
  </div>

  <div class="form-group">
    <label>Priority</label>
    <InputSelect class="form-control" @bind-Value="Task.Priority">
        <option>Select a priority</option>
        @foreach (string item in Enum.GetNames(typeof(Priority)))
            {
            <option value="@item">@item</option>
            }
    </InputSelect>
    <ValidationMessage For="()=> Task.Priority"></ValidationMessage>
     <small id="nameHelp" class="form-text text-muted">Enter task name</small>
  </div>
  
  <button type="submit" class="btn btn-primary">Create</button>
</EditForm>

@code {
    private TaskCreateRequest Task = new TaskCreateRequest();
    private async Task SubmitTask()
    {
        var result = await TaskApiClient.CreateTask(Task);
        if (result)
        {
            toastService.ShowSuccess($"{Task.Name} has been created successfully.","Success");
            NavigationManager.NavigateTo("/taskslist");
        }
        else
        {
            toastService.ShowError($"An error occurred in progress. Please contact to administrator.","Error");

        }
    }
}
